{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\INFO442\\\\sunrise\\\\src\\\\pages\\\\TopicPage\\\\TopicPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import ResourceNav from '../../Components/ResourceNav';\n// import topicData from '../../data/topicData.json';\n\n// function TopicPage({ topic }) {\n//   const { topicid } = useParams();\n\n//   if (!topic) return <div>Topic not found</div>;\n\n//   return (\n//     <div>\n//       <ResourceNav topics={topicData} currentTopicId={topicid} />\n//       <h2>{topic.topicid}</h2>\n//       {topic.sections.map((section, idx) => (\n//         <div key={idx}>\n//           {section.title && <h3>{section.title}</h3>}\n//           <ul>\n//             {section.qa.map((qa, i) => (\n//               <li key={i}>\n//                 {qa.question && <p><strong>{qa.question}</strong></p>}\n//                 {qa.answerArr.map((answer, j) => (\n//                   <div key={j}>\n//                     {answer.type === 'url' ? (\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                     ) : answer.type === 'youtube' ? (\n//                       <div>\n//                         <p>{answer.name}</p>\n//                         <iframe\n//                           width=\"560\"\n//                           height=\"315\"\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                           allowFullScreen\n//                         ></iframe>\n//                       </div>\n//                     ) : null}\n//                     {/* Display images and videos under the \"Anatomy\" section */}\n//                     {section.title === 'Anatomy' && answer.type === 'image' ? (\n//                       <img src={answer.url} alt=\"Image\" />\n//                     ) : section.title === 'Anatomy' && answer.type === 'video' ? (\n//                       <iframe\n//                         width=\"560\"\n//                         height=\"315\"\n//                         src={answer.url}\n//                         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                         allowFullScreen\n//                       ></iframe>\n//                     ) : null}\n//                   </div>\n//                 ))}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default TopicPage;\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ResourceNav from '../../Components/ResourceNav';\nimport topicData from '../../data/topicData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopicPage({\n  topic\n}) {\n  _s();\n  const {\n    topicid\n  } = useParams();\n  if (!topic) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Topic not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResourceNav, {\n      topics: topicData,\n      currentTopicId: topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: topic.topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), topic.sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [section.title && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: section.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: section.qa.map((qa, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [qa.question && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: qa.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), qa.answerArr.map((answer, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: answer.type === 'url' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: answer.key\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 23\n            }, this) : answer.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: answer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"560\",\n                height: \"315\",\n                src: `https://www.youtube.com/embed/${answer.videoId}`,\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), answer.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: answer.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 48\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this) : null\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this))]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(TopicPage, \"P+uVOP9w0eU8FGIk45ZgKq//pvw=\", false, function () {\n  return [useParams];\n});\n_c = TopicPage;\nexport default TopicPage;\nvar _c;\n$RefreshReg$(_c, \"TopicPage\");","map":{"version":3,"names":["React","useParams","ResourceNav","topicData","jsxDEV","_jsxDEV","TopicPage","topic","_s","topicid","children","fileName","_jsxFileName","lineNumber","columnNumber","topics","currentTopicId","sections","map","section","idx","title","qa","i","question","answerArr","answer","j","type","dangerouslySetInnerHTML","__html","key","name","width","height","src","videoId","allow","allowFullScreen","description","_c","$RefreshReg$"],"sources":["C:/Users/86136/Desktop/INFO442/sunrise/src/pages/TopicPage/TopicPage.js"],"sourcesContent":["// import React from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import ResourceNav from '../../Components/ResourceNav';\r\n// import topicData from '../../data/topicData.json';\r\n\r\n// function TopicPage({ topic }) {\r\n//   const { topicid } = useParams();\r\n\r\n//   if (!topic) return <div>Topic not found</div>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <ResourceNav topics={topicData} currentTopicId={topicid} />\r\n//       <h2>{topic.topicid}</h2>\r\n//       {topic.sections.map((section, idx) => (\r\n//         <div key={idx}>\r\n//           {section.title && <h3>{section.title}</h3>}\r\n//           <ul>\r\n//             {section.qa.map((qa, i) => (\r\n//               <li key={i}>\r\n//                 {qa.question && <p><strong>{qa.question}</strong></p>}\r\n//                 {qa.answerArr.map((answer, j) => (\r\n//                   <div key={j}>\r\n//                     {answer.type === 'url' ? (\r\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                     ) : answer.type === 'youtube' ? (\r\n//                       <div>\r\n//                         <p>{answer.name}</p>\r\n//                         <iframe\r\n//                           width=\"560\"\r\n//                           height=\"315\"\r\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                           allowFullScreen\r\n//                         ></iframe>\r\n//                       </div>\r\n//                     ) : null}\r\n//                     {/* Display images and videos under the \"Anatomy\" section */}\r\n//                     {section.title === 'Anatomy' && answer.type === 'image' ? (\r\n//                       <img src={answer.url} alt=\"Image\" />\r\n//                     ) : section.title === 'Anatomy' && answer.type === 'video' ? (\r\n//                       <iframe\r\n//                         width=\"560\"\r\n//                         height=\"315\"\r\n//                         src={answer.url}\r\n//                         allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                         allowFullScreen\r\n//                       ></iframe>\r\n//                     ) : null}\r\n//                   </div>\r\n//                 ))}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TopicPage;\r\n\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ResourceNav from '../../Components/ResourceNav';\r\nimport topicData from '../../data/topicData.json';\r\n\r\nfunction TopicPage({ topic }) {\r\n  const { topicid } = useParams();\r\n\r\n  if (!topic) return <div>Topic not found</div>;\r\n\r\n  return (\r\n    <div>\r\n      <ResourceNav topics={topicData} currentTopicId={topicid} />\r\n      <h2>{topic.topicid}</h2>\r\n      {topic.sections.map((section, idx) => (\r\n        <div key={idx}>\r\n          {section.title && <h3>{section.title}</h3>}\r\n          <ul>\r\n            {section.qa.map((qa, i) => (\r\n              <li key={i}>\r\n                {qa.question && <p><strong>{qa.question}</strong></p>}\r\n                {qa.answerArr.map((answer, j) => (\r\n                  <div key={j}>\r\n                    {answer.type === 'url' ? (\r\n                      <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n                    ) : answer.type === 'youtube' ? (\r\n                      <div>\r\n                        <p>{answer.name}</p>\r\n                        <iframe\r\n                          width=\"560\"\r\n                          height=\"315\"\r\n                          src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                          allowFullScreen\r\n                        ></iframe>\r\n                        {answer.description && <p>{answer.description}</p>}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopicPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}