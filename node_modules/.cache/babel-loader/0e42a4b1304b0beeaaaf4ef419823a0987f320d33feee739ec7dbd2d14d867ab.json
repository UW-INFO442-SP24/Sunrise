{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\INFO442\\\\sunrise\\\\src\\\\pages\\\\TopicPage\\\\TopicPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import topicData from '../../data/topicData.json';\n\n// function TopicPage({ topicId }) {\n//   const topic = topicData.find(topic => topic.topicid === topicId);\n\n//   if (!topic) return <div>Topic not found</div>;\n\n//   return (\n//     <div>\n//       <h2>{topic.topicid}</h2>\n//       {topic.sections.map((section, idx) => (\n//         <div key={idx}>\n//           <h3>{section.title}</h3>\n//           <ul>\n//             {section.qa.map((qa, i) => (\n//               <li key={i}>\n//                 {qa.answerArr.map((answer, j) => (\n//                   <div key={j}>\n//                     {answer.type === 'url' ? (\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                     ) : answer.type === 'youtube' ? (\n//                       <div>\n//                         <p>{answer.name}</p>\n//                         <iframe\n//                           width=\"560\"\n//                           height=\"315\"\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                           allowFullScreen\n//                         ></iframe>\n//                       </div>\n//                     ) : null}\n//                   </div>\n//                 ))}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default TopicPage;\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ResourceNav from '../../Components/ResourceNav';\nimport topicData from '../../data/topicData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopicPage() {\n  _s();\n  const {\n    topicid\n  } = useParams();\n\n  // Find the current topic\n  const currentTopic = topicData.find(topic => topic.topicid === topicid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResourceNav, {\n      topics: topicData,\n      currentTopicId: topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), currentTopic ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentTopic.topicid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), currentTopic.sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: section.qa.map((qa, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: qa.answerArr.map((answer, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: answer.type === 'url' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                dangerouslySetInnerHTML: {\n                  __html: answer.key\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 27\n              }, this) : answer.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: answer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  width: \"560\",\n                  height: \"315\",\n                  src: `https://www.youtube.com/embed/${answer.videoId}`,\n                  allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                  allowFullScreen: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 27\n              }, this) : null\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 23\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Topic not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(TopicPage, \"P+uVOP9w0eU8FGIk45ZgKq//pvw=\", false, function () {\n  return [useParams];\n});\n_c = TopicPage;\nexport default TopicPage;\nvar _c;\n$RefreshReg$(_c, \"TopicPage\");","map":{"version":3,"names":["React","useParams","ResourceNav","topicData","jsxDEV","_jsxDEV","TopicPage","_s","topicid","currentTopic","find","topic","children","topics","currentTopicId","fileName","_jsxFileName","lineNumber","columnNumber","sections","map","section","idx","title","qa","i","answerArr","answer","j","type","dangerouslySetInnerHTML","__html","key","name","width","height","src","videoId","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/86136/Desktop/INFO442/sunrise/src/pages/TopicPage/TopicPage.js"],"sourcesContent":["// import React from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import topicData from '../../data/topicData.json';\r\n\r\n// function TopicPage({ topicId }) {\r\n//   const topic = topicData.find(topic => topic.topicid === topicId);\r\n\r\n//   if (!topic) return <div>Topic not found</div>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{topic.topicid}</h2>\r\n//       {topic.sections.map((section, idx) => (\r\n//         <div key={idx}>\r\n//           <h3>{section.title}</h3>\r\n//           <ul>\r\n//             {section.qa.map((qa, i) => (\r\n//               <li key={i}>\r\n//                 {qa.answerArr.map((answer, j) => (\r\n//                   <div key={j}>\r\n//                     {answer.type === 'url' ? (\r\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                     ) : answer.type === 'youtube' ? (\r\n//                       <div>\r\n//                         <p>{answer.name}</p>\r\n//                         <iframe\r\n//                           width=\"560\"\r\n//                           height=\"315\"\r\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                           allowFullScreen\r\n//                         ></iframe>\r\n//                       </div>\r\n//                     ) : null}\r\n//                   </div>\r\n//                 ))}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TopicPage;\r\n\r\n\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ResourceNav from '../../Components/ResourceNav';\r\nimport topicData from '../../data/topicData.json';\r\n\r\nfunction TopicPage() {\r\n  const { topicid } = useParams();\r\n\r\n  // Find the current topic\r\n  const currentTopic = topicData.find(topic => topic.topicid === topicid);\r\n\r\n  return (\r\n    <div>\r\n      {/* Pass topics and currentTopicId to ResourceNav */}\r\n      <ResourceNav topics={topicData} currentTopicId={topicid} />\r\n\r\n      {/* Check if current topic exists */}\r\n      {currentTopic ? (\r\n        <div>\r\n          <h2>{currentTopic.topicid}</h2>\r\n          {/* Render the content of the current topic */}\r\n          {currentTopic.sections.map((section, idx) => (\r\n            <div key={idx}>\r\n              <h3>{section.title}</h3>\r\n              <ul>\r\n                {section.qa.map((qa, i) => (\r\n                  <li key={i}>\r\n                    {qa.answerArr.map((answer, j) => (\r\n                      <div key={j}>\r\n                        {answer.type === 'url' ? (\r\n                          <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n                        ) : answer.type === 'youtube' ? (\r\n                          <div>\r\n                            <p>{answer.name}</p>\r\n                            <iframe\r\n                              width=\"560\"\r\n                              height=\"315\"\r\n                              src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              allowFullScreen\r\n                            ></iframe>\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div>Topic not found</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopicPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}