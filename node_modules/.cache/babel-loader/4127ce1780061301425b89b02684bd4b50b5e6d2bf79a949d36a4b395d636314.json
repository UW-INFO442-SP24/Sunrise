{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\INFO442\\\\sunrise\\\\src\\\\pages\\\\Resources\\\\Resources.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport topicData from './topicData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Resources() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resources\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: topicData.map((topic, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/${topic.topicid}`,\n              style: {\n                textDecoration: 'none',\n                color: 'black'\n              },\n              children: topic.topicid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), topicData.map((topic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: topic.topicid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), topic.sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: section.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: section.qa.map((qa, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: qa.answerArr.map((answer, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: answer.type === 'url' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                dangerouslySetInnerHTML: {\n                  __html: answer.key\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 27\n              }, this) : answer.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: answer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                  width: \"560\",\n                  height: \"315\",\n                  src: `https://www.youtube.com/embed/${answer.videoId}`\n                  // title={qa.question} // Use the question as the title\n                  // frameBorder=\"0\"\n                  ,\n                  allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                  allowFullScreen: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 27\n              }, this) : null\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 23\n            }, this))\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Resources;\nexport default Resources;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import topicData from './topicData.json';\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {/* Navbar */}\n//       <nav>\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\n//           {topicData.map((topic, index) => (\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\n//               <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n\n//       {/* Content */}\n//       {topicData.map((topic, index) => (\n//         <div key={index}>\n//           <h2>{topic.topicid}</h2>\n//           {topic.qa.map((qa, idx) => (\n//             <div key={idx}>\n//               <h3>{qa.question}</h3>\n//               <ul>\n//                 {qa.answerArr.map((answer, i) => (\n//                   <li key={i}>\n//                     {answer.type === 'url' ? (\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                     ) : answer.type === 'youtube' ? (\n//                       <div>\n//                         <p>{answer.name}</p>\n//                         <iframe\n//                           width=\"560\"\n//                           height=\"315\"\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\n//                           // title={qa.question} // Use the question as the title\n//                           // frameBorder=\"0\"\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                           allowFullScreen\n//                         ></iframe>\n//                       </div>\n//                     ) : null}\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Resources;\n\n// import React from \"react\";\n// import topicData from \"./topicData.json\"; // Import your JSON data\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {topicData.map((topic, index) => (\n//         <div key={index}>\n//           <h3>{topic.topicid}</h3>\n//           {topic.qa.map((qa, idx) => (\n//             <div key={idx}>\n//               <h4>{qa.question}</h4>\n//               <ul>\n//                 {qa.answerArr.map((answer, i) => (\n//                   <li key={i}>\n//                     <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Resources;\n// // function resources () {\n// //   return (\n// //       <div className = \"resources\">\n// //       </div>\n// //   );\n// // }\n// // export default resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","Link","topicData","jsxDEV","_jsxDEV","Resources","className","children","style","listStyle","padding","map","topic","index","display","marginRight","to","topicid","textDecoration","color","fileName","_jsxFileName","lineNumber","columnNumber","sections","section","idx","title","qa","i","answerArr","answer","j","type","dangerouslySetInnerHTML","__html","key","name","width","height","src","videoId","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/86136/Desktop/INFO442/sunrise/src/pages/Resources/Resources.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport topicData from './topicData.json';\r\n\r\nfunction Resources() {\r\n  return (\r\n    <div className=\"resources\">\r\n      {/* Navbar */}\r\n      <nav>\r\n        <ul style={{ listStyle: 'none', padding: 0 }}>\r\n          {topicData.map((topic, index) => (\r\n            <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\r\n              <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Content */}\r\n      {topicData.map((topic, index) => (\r\n        <div key={index}>\r\n          <h2>{topic.topicid}</h2>\r\n          {topic.sections.map((section, idx) => (\r\n            <div key={idx}>\r\n              <h3>{section.title}</h3>\r\n              <ul>\r\n                {section.qa.map((qa, i) => (\r\n                  <li key={i}>\r\n                    {qa.answerArr.map((answer, j) => (\r\n                      <div key={j}>\r\n                        {answer.type === 'url' ? (\r\n                          <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n                        ) : answer.type === 'youtube' ? (\r\n                          <div>\r\n                            <p>{answer.name}</p>\r\n                            <iframe\r\n                              width=\"560\"\r\n                              height=\"315\"\r\n                              src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n                              // title={qa.question} // Use the question as the title\r\n                              // frameBorder=\"0\"\r\n                              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                              allowFullScreen\r\n                            ></iframe>\r\n                          </div>\r\n                        ) : null}\r\n                      </div>\r\n                    ))}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Resources;\r\n\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import topicData from './topicData.json';\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {/* Navbar */}\r\n//       <nav>\r\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\r\n//           {topicData.map((topic, index) => (\r\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\r\n//               <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </nav>\r\n\r\n//       {/* Content */}\r\n//       {topicData.map((topic, index) => (\r\n//         <div key={index}>\r\n//           <h2>{topic.topicid}</h2>\r\n//           {topic.qa.map((qa, idx) => (\r\n//             <div key={idx}>\r\n//               <h3>{qa.question}</h3>\r\n//               <ul>\r\n//                 {qa.answerArr.map((answer, i) => (\r\n//                   <li key={i}>\r\n//                     {answer.type === 'url' ? (\r\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                     ) : answer.type === 'youtube' ? (\r\n//                       <div>\r\n//                         <p>{answer.name}</p>\r\n//                         <iframe\r\n//                           width=\"560\"\r\n//                           height=\"315\"\r\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n//                           // title={qa.question} // Use the question as the title\r\n//                           // frameBorder=\"0\"\r\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                           allowFullScreen\r\n//                         ></iframe>\r\n//                       </div>\r\n//                     ) : null}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import topicData from \"./topicData.json\"; // Import your JSON data\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {topicData.map((topic, index) => (\r\n//         <div key={index}>\r\n//           <h3>{topic.topicid}</h3>\r\n//           {topic.qa.map((qa, idx) => (\r\n//             <div key={idx}>\r\n//               <h4>{qa.question}</h4>\r\n//               <ul>\r\n//                 {qa.answerArr.map((answer, i) => (\r\n//                   <li key={i}>\r\n//                     <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n// // function resources () {\r\n// //   return (\r\n// //       <div className = \"resources\">\r\n// //       </div>\r\n// //   );\r\n// // }\r\n// // export default resources;"],"mappings":"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AAAC,UAAA;QAAAC,YAAA;MAAA,OA4BR,CACN,CAAC;IAAA,GAhCMV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiCV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACqB,EAAA,GArDQvC,SAAS;AAuDlB,eAAeA,SAAS;;AAGxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}