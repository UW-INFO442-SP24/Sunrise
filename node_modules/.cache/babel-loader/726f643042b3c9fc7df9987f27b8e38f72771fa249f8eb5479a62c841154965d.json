{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\INFO442\\\\sunrise\\\\src\\\\pages\\\\Resources\\\\Resources.js\",\n  _s = $RefreshSig$();\n// TopicPage.js\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopicPage({\n  topic\n}) {\n  _s();\n  const {\n    topicid\n  } = useParams();\n  if (!topic) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Topic not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: topic.topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), topic.sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: section.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: section.qa.map((qa, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: qa.answerArr.map((answer, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: answer.type === 'url' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: answer.key\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 23\n            }, this) : answer.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: answer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"560\",\n                height: \"315\",\n                src: `https://www.youtube.com/embed/${answer.videoId}`,\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 23\n            }, this) : null\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 19\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resources\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topic.resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: resource\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(TopicPage, \"P+uVOP9w0eU8FGIk45ZgKq//pvw=\", false, function () {\n  return [useParams];\n});\n_c = TopicPage;\nexport default TopicPage;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import topicData from '../../data/topicData.json';\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {/* Navbar */}\n//       <nav>\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\n//           {topicData.map((topic, index) => (\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\n//               {/* Render each topic as a Link styled like a button */}\n//               <Link \n//                 to={`/${topic.topicid}`} \n//                 style={{ \n//                   textDecoration: 'none', \n//                   color: 'black', \n//                   padding: '5px 10px', \n//                   border: '1px solid black', \n//                   borderRadius: '5px', \n//                   background: 'none', \n//                   cursor: 'pointer' \n//                 }}\n//               >\n//                 {topic.topicid}\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n//     </div>\n//   );\n// }\n\n// export default Resources;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import topicData from './topicData.json';\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {/* Navbar */}\n//       <nav>\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\n//           {topicData.map((topic, index) => (\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\n//               <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n\n//       {/* Content */}\n//       {topicData.map((topic, index) => (\n//         <div key={index}>\n//           <h2>{topic.topicid}</h2>\n//           {topic.qa.map((qa, idx) => (\n//             <div key={idx}>\n//               <h3>{qa.question}</h3>\n//               <ul>\n//                 {qa.answerArr.map((answer, i) => (\n//                   <li key={i}>\n//                     {answer.type === 'url' ? (\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                     ) : answer.type === 'youtube' ? (\n//                       <div>\n//                         <p>{answer.name}</p>\n//                         <iframe\n//                           width=\"560\"\n//                           height=\"315\"\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\n//                           // title={qa.question} // Use the question as the title\n//                           // frameBorder=\"0\"\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                           allowFullScreen\n//                         ></iframe>\n//                       </div>\n//                     ) : null}\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Resources;\n\n// import React from \"react\";\n// import topicData from \"./topicData.json\"; // Import your JSON data\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {topicData.map((topic, index) => (\n//         <div key={index}>\n//           <h3>{topic.topicid}</h3>\n//           {topic.qa.map((qa, idx) => (\n//             <div key={idx}>\n//               <h4>{qa.question}</h4>\n//               <ul>\n//                 {qa.answerArr.map((answer, i) => (\n//                   <li key={i}>\n//                     <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Resources;\n// // function resources () {\n// //   return (\n// //       <div className = \"resources\">\n// //       </div>\n// //   );\n// // }\n// // export default resources;\nvar _c;\n$RefreshReg$(_c, \"TopicPage\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","TopicPage","topic","_s","topicid","children","fileName","_jsxFileName","lineNumber","columnNumber","sections","map","section","idx","title","qa","i","answerArr","answer","j","type","dangerouslySetInnerHTML","__html","key","name","width","height","src","videoId","allow","allowFullScreen","resources","resource","index","_c","$RefreshReg$"],"sources":["C:/Users/86136/Desktop/INFO442/sunrise/src/pages/Resources/Resources.js"],"sourcesContent":["// TopicPage.js\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction TopicPage({ topic }) {\r\n  const { topicid } = useParams();\r\n\r\n  if (!topic) return <div>Topic not found</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{topic.topicid}</h2>\r\n      {topic.sections.map((section, idx) => (\r\n        <div key={idx}>\r\n          <h3>{section.title}</h3>\r\n          <ul>\r\n            {section.qa.map((qa, i) => (\r\n              <li key={i}>\r\n                {qa.answerArr.map((answer, j) => (\r\n                  <div key={j}>\r\n                    {answer.type === 'url' ? (\r\n                      <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n                    ) : answer.type === 'youtube' ? (\r\n                      <div>\r\n                        <p>{answer.name}</p>\r\n                        <iframe\r\n                          width=\"560\"\r\n                          height=\"315\"\r\n                          src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n                          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                          allowFullScreen\r\n                        ></iframe>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                ))}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n      {/* Display resources */}\r\n      <div>\r\n        <h3>Resources</h3>\r\n        <ul>\r\n          {topic.resources.map((resource, index) => (\r\n            <li key={index}>{resource}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopicPage;\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import topicData from '../../data/topicData.json';\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {/* Navbar */}\r\n//       <nav>\r\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\r\n//           {topicData.map((topic, index) => (\r\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\r\n//               {/* Render each topic as a Link styled like a button */}\r\n//               <Link \r\n//                 to={`/${topic.topicid}`} \r\n//                 style={{ \r\n//                   textDecoration: 'none', \r\n//                   color: 'black', \r\n//                   padding: '5px 10px', \r\n//                   border: '1px solid black', \r\n//                   borderRadius: '5px', \r\n//                   background: 'none', \r\n//                   cursor: 'pointer' \r\n//                 }}\r\n//               >\r\n//                 {topic.topicid}\r\n//               </Link>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </nav>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import topicData from './topicData.json';\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {/* Navbar */}\r\n//       <nav>\r\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\r\n//           {topicData.map((topic, index) => (\r\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\r\n//               <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </nav>\r\n\r\n//       {/* Content */}\r\n//       {topicData.map((topic, index) => (\r\n//         <div key={index}>\r\n//           <h2>{topic.topicid}</h2>\r\n//           {topic.qa.map((qa, idx) => (\r\n//             <div key={idx}>\r\n//               <h3>{qa.question}</h3>\r\n//               <ul>\r\n//                 {qa.answerArr.map((answer, i) => (\r\n//                   <li key={i}>\r\n//                     {answer.type === 'url' ? (\r\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                     ) : answer.type === 'youtube' ? (\r\n//                       <div>\r\n//                         <p>{answer.name}</p>\r\n//                         <iframe\r\n//                           width=\"560\"\r\n//                           height=\"315\"\r\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n//                           // title={qa.question} // Use the question as the title\r\n//                           // frameBorder=\"0\"\r\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                           allowFullScreen\r\n//                         ></iframe>\r\n//                       </div>\r\n//                     ) : null}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import topicData from \"./topicData.json\"; // Import your JSON data\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {topicData.map((topic, index) => (\r\n//         <div key={index}>\r\n//           <h3>{topic.topicid}</h3>\r\n//           {topic.qa.map((qa, idx) => (\r\n//             <div key={idx}>\r\n//               <h4>{qa.question}</h4>\r\n//               <ul>\r\n//                 {qa.answerArr.map((answer, i) => (\r\n//                   <li key={i}>\r\n//                     <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n// // function resources () {\r\n// //   return (\r\n// //       <div className = \"resources\">\r\n// //       </div>\r\n// //   );\r\n// // }\r\n// // export default resources;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}