{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\INFO442\\\\sunrise\\\\src\\\\pages\\\\TopicPage\\\\TopicPage.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import topicData from '../../data/topicData.json';\n\n// function TopicPage({ topicId }) {\n//   const topic = topicData.find(topic => topic.topicid === topicId);\n\n//   if (!topic) return <div>Topic not found</div>;\n\n//   return (\n//     <div>\n//       <h2>{topic.topicid}</h2>\n//       {topic.sections.map((section, idx) => (\n//         <div key={idx}>\n//           <h3>{section.title}</h3>\n//           <ul>\n//             {section.qa.map((qa, i) => (\n//               <li key={i}>\n//                 {qa.answerArr.map((answer, j) => (\n//                   <div key={j}>\n//                     {answer.type === 'url' ? (\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                     ) : answer.type === 'youtube' ? (\n//                       <div>\n//                         <p>{answer.name}</p>\n//                         <iframe\n//                           width=\"560\"\n//                           height=\"315\"\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                           allowFullScreen\n//                         ></iframe>\n//                       </div>\n//                     ) : null}\n//                   </div>\n//                 ))}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default TopicPage;\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ResourceNav from '../../Components/ResourceNav';\nimport topicData from '../../data/topicData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TopicPage() {\n  _s();\n  const {\n    topicid\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResourceNav, {\n      topics: topicData,\n      currentTopicId: topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), topicData.map((topic, index) => {\n      if (topic.topicid === topicid) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: topic.sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: section.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: section.qa.map((qa, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: qa.answerArr.map((answer, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: answer.type === 'url' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    dangerouslySetInnerHTML: {\n                      __html: answer.key\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 31\n                  }, this) : answer.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: answer.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                      width: \"560\",\n                      height: \"315\",\n                      src: `https://www.youtube.com/embed/${answer.videoId}`,\n                      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                      allowFullScreen: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 31\n                  }, this) : null\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 27\n                }, this))\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      }\n      return null;\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(TopicPage, \"P+uVOP9w0eU8FGIk45ZgKq//pvw=\", false, function () {\n  return [useParams];\n});\n_c = TopicPage;\nexport default TopicPage;\nvar _c;\n$RefreshReg$(_c, \"TopicPage\");","map":{"version":3,"names":["React","useParams","ResourceNav","topicData","jsxDEV","_jsxDEV","TopicPage","_s","topicid","children","topics","currentTopicId","fileName","_jsxFileName","lineNumber","columnNumber","map","topic","index","sections","section","idx","title","qa","i","answerArr","answer","j","type","dangerouslySetInnerHTML","__html","key","name","width","height","src","videoId","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/86136/Desktop/INFO442/sunrise/src/pages/TopicPage/TopicPage.js"],"sourcesContent":["// import React from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n// import topicData from '../../data/topicData.json';\r\n\r\n// function TopicPage({ topicId }) {\r\n//   const topic = topicData.find(topic => topic.topicid === topicId);\r\n\r\n//   if (!topic) return <div>Topic not found</div>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{topic.topicid}</h2>\r\n//       {topic.sections.map((section, idx) => (\r\n//         <div key={idx}>\r\n//           <h3>{section.title}</h3>\r\n//           <ul>\r\n//             {section.qa.map((qa, i) => (\r\n//               <li key={i}>\r\n//                 {qa.answerArr.map((answer, j) => (\r\n//                   <div key={j}>\r\n//                     {answer.type === 'url' ? (\r\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                     ) : answer.type === 'youtube' ? (\r\n//                       <div>\r\n//                         <p>{answer.name}</p>\r\n//                         <iframe\r\n//                           width=\"560\"\r\n//                           height=\"315\"\r\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                           allowFullScreen\r\n//                         ></iframe>\r\n//                       </div>\r\n//                     ) : null}\r\n//                   </div>\r\n//                 ))}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default TopicPage;\r\n\r\n\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport ResourceNav from '../../Components/ResourceNav';\r\nimport topicData from '../../data/topicData.json';\r\n\r\nfunction TopicPage() {\r\n  const { topicid } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      {/* Pass topics and currentTopicId to ResourceNav */}\r\n      <ResourceNav topics={topicData} currentTopicId={topicid} />\r\n\r\n      <h2>{topicid}</h2>\r\n      {/* Render the content of the topic based on topicid */}\r\n      {topicData.map((topic, index) => {\r\n        if (topic.topicid === topicid) {\r\n          return (\r\n            <div key={index}>\r\n              {topic.sections.map((section, idx) => (\r\n                <div key={idx}>\r\n                  <h3>{section.title}</h3>\r\n                  <ul>\r\n                    {section.qa.map((qa, i) => (\r\n                      <li key={i}>\r\n                        {qa.answerArr.map((answer, j) => (\r\n                          <div key={j}>\r\n                            {answer.type === 'url' ? (\r\n                              <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n                            ) : answer.type === 'youtube' ? (\r\n                              <div>\r\n                                <p>{answer.name}</p>\r\n                                <iframe\r\n                                  width=\"560\"\r\n                                  height=\"315\"\r\n                                  src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n                                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                  allowFullScreen\r\n                                ></iframe>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        ))}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        }\r\n        return null;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopicPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}