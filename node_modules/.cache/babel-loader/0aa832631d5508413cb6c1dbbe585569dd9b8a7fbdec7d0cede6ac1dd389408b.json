{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\86136\\\\Desktop\\\\INFO442\\\\sunrise\\\\src\\\\pages\\\\Resources\\\\Resources.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport topicData from './topicData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Resources() {\n  _s();\n  const {\n    topicId\n  } = useParams();\n\n  // Filter topicData based on the topicId\n  const topic = topicData.find(topic => topic.topicid === topicId);\n  if (!topic) {\n    // Handle case where topic is not found\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Topic not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resources\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'inline-block',\n            marginRight: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Resources\",\n              style: {\n                textDecoration: 'none',\n                color: 'black'\n              },\n              children: \"Back to Topics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: topic.topicid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), topic.sections.map((section, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: section.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: section.qa.map((qa, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: qa.answerArr.map((answer, j) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: answer.type === 'url' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: answer.key\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 45\n            }, this) : answer.type === 'youtube' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: answer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n                width: \"560\",\n                height: \"315\",\n                src: `https://www.youtube.com/embed/${answer.videoId}`\n                // title={qa.question} // Use the question as the title\n                // frameBorder=\"0\"\n                ,\n                allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n                allowFullScreen: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 45\n            }, this) : null\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this))\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Resources, \"11nvDXGjO1ebkehQgvCCT9TXuxI=\", false, function () {\n  return [useParams];\n});\n_c = Resources;\nexport default Resources;\n\n// import React from 'react';\n// import { Link } from 'react-router-dom';\n// import topicData from './topicData.json';\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {/* Navbar */}\n//       <nav>\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\n//           {topicData.map((topic, index) => (\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\n//               <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\n//             </li>\n//           ))}\n//         </ul>\n//       </nav>\n\n//       {/* Content */}\n//       {topicData.map((topic, index) => (\n//         <div key={index}>\n//           <h2>{topic.topicid}</h2>\n//           {topic.qa.map((qa, idx) => (\n//             <div key={idx}>\n//               <h3>{qa.question}</h3>\n//               <ul>\n//                 {qa.answerArr.map((answer, i) => (\n//                   <li key={i}>\n//                     {answer.type === 'url' ? (\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                     ) : answer.type === 'youtube' ? (\n//                       <div>\n//                         <p>{answer.name}</p>\n//                         <iframe\n//                           width=\"560\"\n//                           height=\"315\"\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\n//                           // title={qa.question} // Use the question as the title\n//                           // frameBorder=\"0\"\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n//                           allowFullScreen\n//                         ></iframe>\n//                       </div>\n//                     ) : null}\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Resources;\n\n// import React from \"react\";\n// import topicData from \"./topicData.json\"; // Import your JSON data\n\n// function Resources() {\n//   return (\n//     <div className=\"resources\">\n//       {topicData.map((topic, index) => (\n//         <div key={index}>\n//           <h3>{topic.topicid}</h3>\n//           {topic.qa.map((qa, idx) => (\n//             <div key={idx}>\n//               <h4>{qa.question}</h4>\n//               <ul>\n//                 {qa.answerArr.map((answer, i) => (\n//                   <li key={i}>\n//                     <span dangerouslySetInnerHTML={{ __html: answer.key }} />\n//                   </li>\n//                 ))}\n//               </ul>\n//             </div>\n//           ))}\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Resources;\n// // function resources () {\n// //   return (\n// //       <div className = \"resources\">\n// //       </div>\n// //   );\n// // }\n// // export default resources;\nvar _c;\n$RefreshReg$(_c, \"Resources\");","map":{"version":3,"names":["React","Link","useParams","topicData","jsxDEV","_jsxDEV","Resources","_s","topicId","topic","find","topicid","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","listStyle","padding","display","marginRight","to","textDecoration","color","sections","map","section","idx","title","qa","i","answerArr","answer","j","type","dangerouslySetInnerHTML","__html","key","name","width","height","src","videoId","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/86136/Desktop/INFO442/sunrise/src/pages/Resources/Resources.js"],"sourcesContent":["import React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport topicData from './topicData.json';\r\n\r\nfunction Resources() {\r\n    const { topicId } = useParams();\r\n\r\n    // Filter topicData based on the topicId\r\n    const topic = topicData.find(topic => topic.topicid === topicId);\r\n\r\n    if (!topic) {\r\n        // Handle case where topic is not found\r\n        return <div>Topic not found!</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"resources\">\r\n            {/* Navbar */}\r\n            <nav>\r\n                <ul style={{ listStyle: 'none', padding: 0 }}>\r\n                    <li style={{ display: 'inline-block', marginRight: '10px' }}>\r\n                        <h1><Link to=\"/Resources\" style={{ textDecoration: 'none', color: 'black' }}>Back to Topics</Link></h1>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n\r\n            {/* Content */}\r\n            <h2>{topic.topicid}</h2>\r\n            {topic.sections.map((section, idx) => (\r\n                <div key={idx}>\r\n                    <h3>{section.title}</h3>\r\n                    <ul>\r\n                        {section.qa.map((qa, i) => (\r\n                            <li key={i}>\r\n                                {qa.answerArr.map((answer, j) => (\r\n                                    <div key={j}>\r\n                                        {answer.type === 'url' ? (\r\n                                            <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n                                        ) : answer.type === 'youtube' ? (\r\n                                            <div>\r\n                                                <p>{answer.name}</p>\r\n                                                <iframe\r\n                                                    width=\"560\"\r\n                                                    height=\"315\"\r\n                                                    src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n                                                    // title={qa.question} // Use the question as the title\r\n                                                    // frameBorder=\"0\"\r\n                                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                                    allowFullScreen\r\n                                                ></iframe>\r\n                                            </div>\r\n                                        ) : null}\r\n                                    </div>\r\n                                ))}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Resources;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import topicData from './topicData.json';\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {/* Navbar */}\r\n//       <nav>\r\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\r\n//           {topicData.map((topic, index) => (\r\n//             <li key={index} style={{ display: 'inline-block', marginRight: '10px' }}>\r\n//               <h1><Link to={`/${topic.topicid}`} style={{ textDecoration: 'none', color: 'black' }}>{topic.topicid}</Link></h1>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </nav>\r\n\r\n//       {/* Content */}\r\n//       {topicData.map((topic, index) => (\r\n//         <div key={index}>\r\n//           <h2>{topic.topicid}</h2>\r\n//           {topic.qa.map((qa, idx) => (\r\n//             <div key={idx}>\r\n//               <h3>{qa.question}</h3>\r\n//               <ul>\r\n//                 {qa.answerArr.map((answer, i) => (\r\n//                   <li key={i}>\r\n//                     {answer.type === 'url' ? (\r\n//                       <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                     ) : answer.type === 'youtube' ? (\r\n//                       <div>\r\n//                         <p>{answer.name}</p>\r\n//                         <iframe\r\n//                           width=\"560\"\r\n//                           height=\"315\"\r\n//                           src={`https://www.youtube.com/embed/${answer.videoId}`}\r\n//                           // title={qa.question} // Use the question as the title\r\n//                           // frameBorder=\"0\"\r\n//                           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n//                           allowFullScreen\r\n//                         ></iframe>\r\n//                       </div>\r\n//                     ) : null}\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import topicData from \"./topicData.json\"; // Import your JSON data\r\n\r\n// function Resources() {\r\n//   return (\r\n//     <div className=\"resources\">\r\n//       {topicData.map((topic, index) => (\r\n//         <div key={index}>\r\n//           <h3>{topic.topicid}</h3>\r\n//           {topic.qa.map((qa, idx) => (\r\n//             <div key={idx}>\r\n//               <h4>{qa.question}</h4>\r\n//               <ul>\r\n//                 {qa.answerArr.map((answer, i) => (\r\n//                   <li key={i}>\r\n//                     <span dangerouslySetInnerHTML={{ __html: answer.key }} />\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Resources;\r\n// // function resources () {\r\n// //   return (\r\n// //       <div className = \"resources\">\r\n// //       </div>\r\n// //   );\r\n// // }\r\n// // export default resources;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAE/B;EACA,MAAMO,KAAK,GAAGN,SAAS,CAACO,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,OAAO,KAAKH,OAAO,CAAC;EAEhE,IAAI,CAACC,KAAK,EAAE;IACR;IACA,oBAAOJ,OAAA;MAAAO,QAAA,EAAK;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAEA,oBACIX,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAL,QAAA,gBAEtBP,OAAA;MAAAO,QAAA,eACIP,OAAA;QAAIa,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEC,OAAO,EAAE;QAAE,CAAE;QAAAR,QAAA,eACzCP,OAAA;UAAIa,KAAK,EAAE;YAAEG,OAAO,EAAE,cAAc;YAAEC,WAAW,EAAE;UAAO,CAAE;UAAAV,QAAA,eACxDP,OAAA;YAAAO,QAAA,eAAIP,OAAA,CAACJ,IAAI;cAACsB,EAAE,EAAC,YAAY;cAACL,KAAK,EAAE;gBAAEM,cAAc,EAAE,MAAM;gBAAEC,KAAK,EAAE;cAAQ,CAAE;cAAAb,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGNX,OAAA;MAAAO,QAAA,EAAKH,KAAK,CAACE;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvBP,KAAK,CAACiB,QAAQ,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,GAAG,kBAC7BxB,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAAO,QAAA,EAAKgB,OAAO,CAACE;MAAK;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBX,OAAA;QAAAO,QAAA,EACKgB,OAAO,CAACG,EAAE,CAACJ,GAAG,CAAC,CAACI,EAAE,EAAEC,CAAC,kBAClB3B,OAAA;UAAAO,QAAA,EACKmB,EAAE,CAACE,SAAS,CAACN,GAAG,CAAC,CAACO,MAAM,EAAEC,CAAC,kBACxB9B,OAAA;YAAAO,QAAA,EACKsB,MAAM,CAACE,IAAI,KAAK,KAAK,gBAClB/B,OAAA;cAAMgC,uBAAuB,EAAE;gBAAEC,MAAM,EAAEJ,MAAM,CAACK;cAAI;YAAE;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GACzDkB,MAAM,CAACE,IAAI,KAAK,SAAS,gBACzB/B,OAAA;cAAAO,QAAA,gBACIP,OAAA;gBAAAO,QAAA,EAAIsB,MAAM,CAACM;cAAI;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpBX,OAAA;gBACIoC,KAAK,EAAC,KAAK;gBACXC,MAAM,EAAC,KAAK;gBACZC,GAAG,EAAG,iCAAgCT,MAAM,CAACU,OAAQ;gBACrD;gBACA;gBAAA;gBACAC,KAAK,EAAC,0FAA0F;gBAChGC,eAAe;cAAA;gBAAAjC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,GACN;UAAI,GAhBFmB,CAAC;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBN,CACR;QAAC,GApBGgB,CAAC;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBN,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GA3BCa,GAAG;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA4BR,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACT,EAAA,CAzDQD,SAAS;EAAA,QACMJ,SAAS;AAAA;AAAA6C,EAAA,GADxBzC,SAAS;AA2DlB,eAAeA,SAAS;;AAIxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}